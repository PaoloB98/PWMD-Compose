version: '3.8'

services:
  {{PROJECT_NAME}}-mailman-core:
    image: maxking/mailman-core:0.4
    container_name: {{PROJECT_NAME}}-mailman-core
    hostname: {{PROJECT_NAME}}-mailman-core
    volumes:
    - /opt/projects/{{PROJECT_NAME}}/volumes/mailman-core/:/opt/mailman/
    links:
    - postgres-db:postgres-db
    depends_on:
    - postgres-db
    environment:
    - DATABASE_TYPE=postgres
    - DATABASE_CLASS=mailman.database.postgresql.PostgreSQLDatabase
    - DATABASE_URL=postgresql://mailman:{{POSTGRESS_DB_PASS}}@{{PROJECT_NAME}}-postgres-db/mailmandb
    - HYPERKITTY_API_KEY={{HYPERKITTY_KEY}}
    - TZ=Europe/Rome
    - MAILMAN_REST_USER={{MAILMAN_REST_ADMIN}}
    - MAILMAN_REST_PASSWORD={{MAILMAN_REST_PASS}}
    - MTA=postfix
    - SMTP_HOST={{PUBLIC_IP}}
    restart: always
    networks:
      {{PROJECT_NAME}}:

  {{PROJECT_NAME}}-mailman-web:
    image: maxking/mailman-web:0.4
    container_name: {{PROJECT_NAME}}-mailman-web
    hostname: {{PROJECT_NAME}}-mailman-web
    stop_grace_period: 30s
    restart: always
    depends_on:
    - postgres-db
    links:
    - {{PROJECT_NAME}}-mailman-core:{{PROJECT_NAME}}-mailman-core
    - {{PROJECT_NAME}}-postgres-db:{{PROJECT_NAME}}-postgres-db
    volumes:
    - /opt/projects/{{PROJECT_NAME}}/volumes/mailman-web:/opt/mailman-web-data
    environment:
    - DATABASE_TYPE=postgres
    - DATABASE_URL=postgresql://mailman:{{POSTGRESS_DB_PASS}}@{{PROJECT_NAME}}-postgres-db/mailmandb
    - HYPERKITTY_API_KEY={{HYPERKITTY_KEY}}
    - TZ=Europe/Rome
    - ALLOWED_HOSTS={{WEB_MAILMAN_ALLOWED_HOSTS}}
    - SECRET_KEY={{DJANGO_SECRET_KEY}}
    - SERVE_FROM_DOMAIN={{WEB_MAILMAN_SERVE_FROM_DOM}}
    - MAILMAN_REST_USER={{MAILMAN_REST_ADMIN}}
    - MAILMAN_REST_PASSWORD={{MAILMAN_REST_PASS}}
    - UWSGI_STATIC_MAP=/static=/opt/mailman-web-data/static
    - DJANGO_LOG_URL=/opt/mailman-web-data/logs/mailmanweb.log
    - SMTP_HOST={{PUBLIC_IP}}
    networks:
      {{PROJECT_NAME}}:

  {{PROJECT_NAME}}-postfix:
    image: postfix-gateway
    container_name: {{PROJECT_NAME}}-postfix
    build: ./postfix
    restart: always
    hostname: {{PROJECT_NAME}}-postfix
    volumes:
      - /opt/projects/{{PROJECT_NAME}}/volumes/postfix/logs:/var/log  #To allow permanent logging
      - /opt/projects/{{PROJECT_NAME}}/volumes/mailman-core:/opt/mailman/
      - /opt/projects/{{PROJECT_NAME}}/volumes/postfix/virtusertable:/etc/postfix/virtusertable
    ports:
      - "{{PUBLIC_IP}}:25:25"
      - "{{PUBLIC_IP}}:587:587"
      - "{{PUBLIC_IP}}:465:465"
    networks:
      {{PROJECT_NAME}}:

  {{PROJECT_NAME}}-public-web-site:
    image: httpd
    container_name: {{PROJECT_NAME}}-public-web-site
    restart: always
    hostname: {{PROJECT_NAME}}-public-web-site
    volumes:
    - /opt/projects/{{PROJECT_NAME}}/volumes/public-web-site:/usr/local/apache2/htdocs/
    networks:
      {{PROJECT_NAME}}:

  {{PROJECT_NAME}}-private-website:
    image: projectwebsite:1.0.0
    container_name: {{PROJECT_NAME}}-private-website
    restart: always
    hostname: {{PROJECT_NAME}}-private-website
    volumes:
    - /opt/projects/{{PROJECT_NAME}}/volumes/private-web-site/usersecrets:/root/.microsoft/usersecrets:ro
    - /opt/projects/{{PROJECT_NAME}}/volumes/private-web-site/images:/app/wwwroot/images:ro
    - /opt/projects/{{PROJECT_NAME}}/volumes/private-web-site/repository:/repository
    environment:
      ASPNETCORE_ENVIRONMENT: Development
    networks:
      {{PROJECT_NAME}}:

  {{PROJECT_NAME}}-reverse-proxy:
    container_name: {{PROJECT_NAME}}-nginx-rproxy
    hostname: {{PROJECT_NAME}}-reverse-proxy
    build:
      context: ./nginx
    ports:
      - "{{PUBLIC_IP}}:443:443"
      - "{{PUBLIC_IP}}:80:80"
    restart: always
    volumes:
    - /etc/letsencrypt/:/etc/letsencrypt:ro
    networks:
      {{PROJECT_NAME}}:

  {{PROJECT_NAME}}-postgres-db:
    hostname: {{PROJECT_NAME}}-postgres-db
    container_name: {{PROJECT_NAME}}-postgres-db
    environment:
    - PGUSER={{PG_USER}}
    - POSTGRES_DB={{POSTGRESS_DB_NAME}}
    - POSTGRES_USER={{POSTGRESS_USER}}
    - POSTGRES_PASSWORD={{POSTGRESS_DB_PASS}}
    restart: always
    image: postgres:11-alpine
    volumes:
    - /opt/projects/{{PROJECT_NAME}}/volumes/postgres-db:/var/lib/postgresql/data
    networks:
      {{PROJECT_NAME}}:

networks:
  {{PROJECT_NAME}}:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: {{DOCKER_SUBNET}}